<!DOCTYPE html>
<html
  class="base"
  lang="{{ locale }}"
>
  <head>

    {% include "partials/meta.njk" %}

  </head>
  <body class="body">
    {% include "partials/svg-sprite.njk" %}

    {% include "partials/mobile-menu.njk" %}
    
    {% include "partials/intro.njk" %}

    {% include "partials/stats.njk" %}
    
    {% include "partials/project.njk" %}

    {% include "partials/team.njk" %}

    {% include "partials/footer.njk" %}

    {{ content | safe }}

    <script>
      const showMenu = () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
        document.body.classList.add("menu-is-open");
        document.getElementsByClassName("mobile-menu")[0].classList.add("mobile-menu_active");
      }

      const hideMenu = () => {
        document.body.classList.remove("menu-is-open");
        document.getElementsByClassName("mobile-menu")[0].classList.remove("mobile-menu_active");
      };

      const openButton = document.getElementsByClassName("menu__icon_open")[0];
      const closeButton = document.getElementsByClassName("menu__icon_close")[0];
      const navLinks = document.querySelectorAll('.mobile-link_internal');

      openButton.addEventListener("click", showMenu);
      closeButton.addEventListener("click", hideMenu);
      navLinks.forEach((link, index) => { link.addEventListener('click', hideMenu) });
    </script>


    <script>
      const links = document.querySelectorAll("a[data-analytics]");
      for (let i = 0; i < links.length; i++) {
          links[i].addEventListener('click', handleLinkEvent);
          links[i].addEventListener('auxclick', handleLinkEvent);
      }

      function handleLinkEvent(event) {
          let link = event.target;
          let middle = event.type == "auxclick" && event.which == 2;
          let click = event.type == "click";
          while (link && (typeof link.tagName == 'undefined' || link.tagName.toLowerCase() != 'a' || !link.href)) {
              link = link.parentNode;
          }
          if (middle || click) {
              const attributes = link.getAttribute('data-analytics').split(/,(.+)/);
              const events = [JSON.parse(attributes[0]), JSON.parse(attributes[1] || '{}')];
              plausible(...events);
          }
          if (!link.target) {
              if (!(event.ctrlKey || event.metaKey || event.shiftKey) && click) {
                  setTimeout(function () {
                      location.href = link.href;
                  }, 150);
                  event.preventDefault();
              }
          }
      }
    </script>
  </body>
</html>